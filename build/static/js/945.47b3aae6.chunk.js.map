{"version":3,"file":"static/js/945.47b3aae6.chunk.js","mappings":"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","sources":["api/BaseAPI/BaseAPI.ts","components/table/Table.tsx","components/table/TableRow.tsx","hooks/useTransition/useTransition.ts","api/EduProgramAPI/EduProgramAPI.ts","pages/eduProgram-info/EduProgramInfo.tsx","pages/eduProgram-info/EduProgramInfo.hooks.ts"],"sourcesContent":["class BaseAPI {}\r\n\r\nexport const apiInstance = new BaseAPI();\r\nexport default BaseAPI;\r\n","import React from 'react';\r\n\r\nimport TableMUI from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ninterface Props {\r\n  title?: React.ReactNode;\r\n  COLUMNS?: {\r\n    title: string;\r\n  }[];\r\n}\r\nexport const Table: React.FC<React.PropsWithChildren<Props>> = ({\r\n  children,\r\n  title,\r\n  COLUMNS,\r\n}) => {\r\n  return (\r\n    <>\r\n      {title && (\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'Bold' }}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <TableContainer component={Paper}>\r\n        <TableMUI sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          {COLUMNS && (\r\n            <TableHead>\r\n              <TableRow>\r\n                {COLUMNS.map((el, index) => (\r\n                  <TableCell sx={{ fontWeight: 'Bold' }} key={index}>\r\n                    <Typography variant=\"body2\" sx={{color: '#606060', fontSize: 15}}>\r\n                      {el.title}\r\n                    </Typography>\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          )}\r\n          <TableBody>{children}</TableBody>\r\n        </TableMUI>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport TableRowMUI from \"@mui/material/TableRow\";\r\n\r\ninterface Props {\r\n  onClick?: VoidFunction;\r\n}\r\n\r\nexport const TableRow: React.FC<React.PropsWithChildren<Props>> = ({\r\n  children,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <TableRowMUI hover={!!onClick} onClick={onClick}>\r\n      {children}\r\n    </TableRowMUI>\r\n  );\r\n};\r\n","import { useCallback, useState } from \"react\";\r\n\r\nimport { TransitionType } from \"./types\";\r\n\r\nexport const useTransition = <U, T = unknown>(\r\n  asyncFnc: (value?: U) => Promise<T>,\r\n  args?: U\r\n): TransitionType<T> => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [payload, setPayload] = useState<T | undefined>();\r\n  const [setup, setSetup] = useState(true);\r\n\r\n  if (setup && !isLoading) {\r\n    setSetup(false);\r\n    try {\r\n      setIsLoading(true);\r\n      setIsError(false);\r\n      setPayload(undefined);\r\n      asyncFnc(args)\r\n        .then((data: T) => {\r\n          setPayload(data);\r\n        })\r\n        .catch((e) => setIsError(true))\r\n        .finally(() => setIsLoading(false));\r\n    } catch (e) {\r\n      setIsLoading(false);\r\n      setIsError(true);\r\n    }\r\n  }\r\n\r\n  const setupAgain = useCallback(() => setSetup(true), []);\r\n  return [payload, isLoading, isError, setupAgain];\r\n};\r\n","import BaseAPI from '../BaseAPI/BaseAPI';\r\nimport * as t from './types';\r\n\r\nclass EduProgramAPI extends BaseAPI {\r\n  public static getEduProgramInfo(): // options: t.GetEduProgramRequest\r\n  Promise<t.GetEduProgramResponse> {\r\n    return new Promise((res) => res(require('../mocks/EduProgramAPI.json')));\r\n  }\r\n}\r\n\r\nexport const apiInstance = new EduProgramAPI();\r\nexport default EduProgramAPI;\r\n","import React from 'react';\r\nimport { usePageParams } from './EduProgramInfo.hooks';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\nimport UniversityAPI from '../../api/UniversityAPI/UniversityAPI';\r\nimport { Table, TableRow } from '../../components/table';\r\nimport { useTransition } from '../../hooks/useTransition/useTransition';\r\nimport { CircularProgress } from '../../components/progress';\r\nimport EduProgramAPI from '../../api/EduProgramAPI/EduProgramAPI';\r\n\r\nconst COLUMNS = [\r\n  {\r\n    title: '№',\r\n  },\r\n  {\r\n    title: 'СНИЛС',\r\n  },\r\n  {\r\n    title: 'Сумма баллов',\r\n  },\r\n  {\r\n    title: 'Сумма баллов без ИД',\r\n  },\r\n  {\r\n    title: 'Инф',\r\n  },\r\n  {\r\n    title: 'Мат',\r\n  },\r\n  {\r\n    title: 'Рус',\r\n  },\r\n  {\r\n    title: 'ИД',\r\n  },\r\n  {\r\n    title: 'ПП',\r\n  },\r\n  {\r\n    title: 'Ориг.',\r\n  },\r\n  {\r\n    title: 'Согл.',\r\n  },\r\n];\r\nconst EduProgramInfo = () => {\r\n  const pageParams = usePageParams();\r\n\r\n  const [data, isLoading] = useTransition(() =>\r\n    EduProgramAPI.getEduProgramInfo()\r\n  );\r\n  const abiturients = data?.data;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ height: '70vh' }} mt={5}>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : abiturients && abiturients.length > 0 ? (\r\n            <Table COLUMNS={COLUMNS} title={data.eduProgram_name}>\r\n              {abiturients.map((el) => (\r\n                <TableRow key={el.abiturient_id}>\r\n                  <TableCell>{'1'}</TableCell>\r\n                  {/* <TableCell>{el.kcp}</TableCell> */}\r\n                  <TableCell>{el.abiturient_snils}</TableCell>\r\n                  <TableCell>{el.summa_ballov}</TableCell>\r\n                  <TableCell>{el.summa_ballov_bez_ind_dos}</TableCell>\r\n                  <TableCell>{el.ikt}</TableCell>\r\n                  <TableCell>{el.math}</TableCell>\r\n                  <TableCell>{el.rus}</TableCell>\r\n                  <TableCell>{el.ind_dos}</TableCell>\r\n                  <TableCell>{el.preimush_pravo}</TableCell>\r\n                  <TableCell>{el.original}</TableCell>\r\n                  <TableCell>{el.soglasie}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </Table>\r\n          ) : (\r\n            <p>Ничего не найдено</p>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EduProgramInfo;\r\n","import { useParams } from 'react-router-dom';\r\n\r\ntype PageParams = {\r\n  city_id: string;\r\n  year: string;\r\n  university_id: string;\r\n  edu_program_id: string;\r\n};\r\nexport const usePageParams = () => {\r\n  return useParams() as PageParams;\r\n};\r\n"],"names":["BaseAPI","Table","children","title","COLUMNS","Typography","variant","sx","fontWeight","TableContainer","component","Paper","minWidth","TableHead","map","el","index","TableCell","color","fontSize","TableBody","TableRow","onClick","hover","useTransition","asyncFnc","args","useState","isLoading","setIsLoading","isError","setIsError","payload","setPayload","setup","setSetup","undefined","then","data","catch","e","finally","useCallback","EduProgramAPI","Promise","res","require","useParams","abiturients","Container","maxWidth","Box","height","mt","length","eduProgram_name","abiturient_snils","summa_ballov","summa_ballov_bez_ind_dos","ikt","math","rus","ind_dos","preimush_pravo","original","soglasie","abiturient_id"],"sourceRoot":""}