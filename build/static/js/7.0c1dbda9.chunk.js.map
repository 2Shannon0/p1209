{"version":3,"file":"static/js/7.0c1dbda9.chunk.js","mappings":"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","sources":["api/BaseAPI/BaseAPI.ts","api/UniversityAPI/UniversityAPI.ts","components/table/Table.tsx","components/table/TableRow.tsx","hooks/useTransition/useTransition.ts","components/checkbox/Checkbox.tsx","pages/educational-program/EducationalProgram.tsx","pages/educational-program/EducationalProgram.hooks.ts"],"sourcesContent":["class BaseAPI {}\r\n\r\nexport const apiInstance = new BaseAPI();\r\nexport default BaseAPI;\r\n","import BaseAPI from \"../BaseAPI/BaseAPI\";\r\nimport * as t from \"./types\";\r\n\r\nclass UniversityAPI extends BaseAPI {\r\n  public static getUniversityCommonInfo(\r\n    options: t.GetUniversityRequest\r\n  ): Promise<t.GetUniversityResponse> {\r\n    // /api/institution/info\r\n    return new Promise((res) =>\r\n      res(require(\"../mocks/UniversityAPI.university.json\"))\r\n    );\r\n  }\r\n\r\n  public static getEducationalProgramInfo(\r\n    options: t.GetEducationalProgramRequest\r\n  ): Promise<t.GetEducationalProgramResponse> {\r\n    // /api/institution/educational-program/info\r\n    return new Promise((res) =>\r\n      res(require(\"../mocks/UniversityAPI.educational_program.json\"))\r\n    );\r\n  }\r\n}\r\n\r\nexport const apiInstance = new UniversityAPI();\r\nexport default UniversityAPI;\r\n","import React from \"react\";\r\n\r\nimport TableMUI from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\ninterface Props {\r\n  title?: React.ReactNode;\r\n  COLUMNS?: {\r\n    title: string;\r\n  }[];\r\n}\r\nexport const Table: React.FC<React.PropsWithChildren<Props>> = ({\r\n  children,\r\n  title,\r\n  COLUMNS,\r\n}) => {\r\n  return (\r\n    <>\r\n      {title && <div>{title}</div>}\r\n      <TableContainer component={Paper}>\r\n        <TableMUI sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          {COLUMNS && (\r\n            <TableHead>\r\n              <TableRow>\r\n                {COLUMNS.map((el, index) => (\r\n                  <TableCell key={index}>{el.title}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          )}\r\n          <TableBody>{children}</TableBody>\r\n        </TableMUI>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport TableRowMUI from \"@mui/material/TableRow\";\r\n\r\ninterface Props {\r\n  onClick?: VoidFunction;\r\n}\r\n\r\nexport const TableRow: React.FC<React.PropsWithChildren<Props>> = ({\r\n  children,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <TableRowMUI hover={!!onClick} onClick={onClick}>\r\n      {children}\r\n    </TableRowMUI>\r\n  );\r\n};\r\n","import { useCallback, useState } from \"react\";\r\n\r\nimport { TransitionType } from \"./types\";\r\n\r\nexport const useTransition = <U, T = unknown>(\r\n  asyncFnc: (value?: U) => Promise<T>,\r\n  args?: U\r\n): TransitionType<T> => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [payload, setPayload] = useState<T | undefined>();\r\n  const [setup, setSetup] = useState(true);\r\n\r\n  if (setup && !isLoading) {\r\n    setSetup(false);\r\n    try {\r\n      setIsLoading(true);\r\n      setIsError(false);\r\n      setPayload(undefined);\r\n      asyncFnc(args)\r\n        .then((data: T) => {\r\n          setPayload(data);\r\n        })\r\n        .catch((e) => setIsError(true))\r\n        .finally(() => setIsLoading(false));\r\n    } catch (e) {\r\n      setIsLoading(false);\r\n      setIsError(true);\r\n    }\r\n  }\r\n\r\n  const setupAgain = useCallback(() => setSetup(true), []);\r\n  return [payload, isLoading, isError, setupAgain];\r\n};\r\n","interface Props {\r\n  value: boolean;\r\n  onChange: VoidFunction;\r\n}\r\nexport const Checkbox: React.FC<Props> = ({ value, onChange }) => {\r\n  return <input type=\"checkbox\" checked={value} onChange={onChange} />;\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport UniversityAPI from \"../../api/UniversityAPI/UniversityAPI\";\r\nimport { Checkbox } from \"../../components/checkbox\";\r\nimport { Table, TableRow } from \"../../components/table\";\r\nimport { useTransition } from \"../../hooks/useTransition/useTransition\";\r\nimport { CircularProgress } from \"../../components/progress\";\r\nimport { usePageParams } from \"./EducationalProgram.hooks\";\r\n\r\nconst COLUMNS = [\r\n  {\r\n    title: \"Место\",\r\n  },\r\n  {\r\n    title: \"СНИЛС\",\r\n  },\r\n  {\r\n    title: \"П1\",\r\n  },\r\n  {\r\n    title: \"П2\",\r\n  },\r\n  {\r\n    title: \"П3\",\r\n  },\r\n  {\r\n    title: \"Сумма\",\r\n  },\r\n  {\r\n    title: \"Рассматриваемые ОП и ВУЗы\",\r\n  },\r\n  {\r\n    title: \"Оригинал\",\r\n  },\r\n];\r\n\r\nconst EducationalProgram = () => {\r\n  const pageParams = usePageParams();\r\n\r\n  const [data, isLoading] = useTransition(() =>\r\n    UniversityAPI.getEducationalProgramInfo(pageParams)\r\n  );\r\n  const abiturientsList = data?.data;\r\n\r\n  const columns = useMemo(() => {\r\n    const temp = [...COLUMNS];\r\n    data?.exams.forEach((exam, index) => {\r\n      const item = temp.find((el) => el.title === `П${index + 1}`);\r\n      if (item) {\r\n        item.title = exam.name;\r\n      }\r\n    });\r\n    return temp;\r\n  }, [data]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ height: \"70vh\" }} mt={5}>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : abiturientsList && abiturientsList.length > 0 ? (\r\n            <Table COLUMNS={columns}>\r\n              {abiturientsList.map((el) => (\r\n                <TableRow key={el.place}>\r\n                  <TableCell>{el.place}</TableCell>\r\n                  <TableCell>{el.snils}</TableCell>\r\n                  <TableCell>{el.exam_scores[1]?.score}</TableCell>\r\n                  <TableCell>{el.exam_scores[0]?.score}</TableCell>\r\n                  <TableCell>{el.exam_scores[2]?.score}</TableCell>\r\n                  <TableCell>{el.summ}</TableCell>\r\n                  <TableCell>\r\n                    {el.considerations.map((consideration) => (\r\n                      <Typography variant=\"body2\" key={consideration.title}>\r\n                        {consideration.title}\r\n                      </Typography>\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Checkbox value={el.is_original} onChange={() => {}} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </Table>\r\n          ) : (\r\n            <p>Ничего не найдено</p>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EducationalProgram;\r\n","import { useParams } from \"react-router-dom\";\r\n\r\ntype PageParams = {\r\n  city_id: string;\r\n  year: string;\r\n  university_id: string;\r\n  educational_program_id: string;\r\n};\r\nexport const usePageParams = () => {\r\n  return useParams() as PageParams;\r\n};\r\n"],"names":["BaseAPI","UniversityAPI","options","Promise","res","require","Table","children","title","COLUMNS","TableContainer","component","Paper","sx","minWidth","TableHead","map","el","index","TableCell","TableBody","TableRow","onClick","hover","useTransition","asyncFnc","args","useState","isLoading","setIsLoading","isError","setIsError","payload","setPayload","setup","setSetup","undefined","then","data","catch","e","finally","useCallback","Checkbox","value","onChange","type","checked","pageParams","useParams","abiturientsList","columns","useMemo","temp","exams","forEach","exam","item","find","name","Container","maxWidth","Box","height","mt","length","place","snils","exam_scores","score","summ","considerations","consideration","Typography","variant","is_original"],"sourceRoot":""}